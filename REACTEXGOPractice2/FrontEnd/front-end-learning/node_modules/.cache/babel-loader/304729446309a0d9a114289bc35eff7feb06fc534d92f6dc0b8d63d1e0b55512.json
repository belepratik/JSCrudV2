{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pratikbe\\\\OneDrive - AMDOCS\\\\Documents\\\\Learning\\\\REACTEXGOPractice2\\\\FrontEnd\\\\front-end-learning\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [secondName, setSecondName] = useState('');\n  const [submittedData, setSubmittedData] = useState([]);\n  const fetchData = async () => {\n    const response = await fetch('https://script.google.com/macros/s/AKfycbzVZ-sGlysONiCZd-Fb4_JAssWu1oZaWrZRx8mIoq1mcqBA8eKGKiLRYk20cnRlnIDvdQ/exec');\n    if (response.ok) {\n      const data = await response.json();\n      console.log(`Response FE : ${JSON.stringify(data)}`);\n      console.log(`We are Here`);\n      setSubmittedData(data.map(([firstName, secondName]) => ({\n        firstName,\n        secondName\n      })));\n    }\n  };\n  const handleEditClick = async index => {\n    const newData = prompt('Enter new first name and second name separated by a comma'); // replace this with your own edit UI\n    const [newFirstName, newSecondName] = newData.split(',');\n\n    // Update the local state\n    setSubmittedData(prevData => {\n      const newData = [...prevData];\n      newData[index] = {\n        firstName: newFirstName,\n        secondName: newSecondName\n      };\n      return newData;\n    });\n\n    // Send a PUT request to the backend\n    const response = await fetch('/api/rows/' + index, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        firstName: newFirstName,\n        secondName: newSecondName\n      })\n    });\n    if (!response.ok) {\n      console.error('Error updating data');\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: submittedData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [data.firstName, \" \", data.secondName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditClick(index),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ONKwsptiUwj+SZvU1YLyZaux8cA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","firstName","setFirstName","secondName","setSecondName","submittedData","setSubmittedData","fetchData","response","fetch","ok","data","json","console","log","JSON","stringify","map","handleEditClick","index","newData","prompt","newFirstName","newSecondName","split","prevData","method","headers","body","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pratikbe/OneDrive - AMDOCS/Documents/Learning/REACTEXGOPractice2/FrontEnd/front-end-learning/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [firstName, setFirstName] = useState('');\n  const [secondName, setSecondName] = useState('');\n  const [submittedData, setSubmittedData] = useState([]);\n\n  const fetchData = async () => {\n    const response = await fetch('https://script.google.com/macros/s/AKfycbzVZ-sGlysONiCZd-Fb4_JAssWu1oZaWrZRx8mIoq1mcqBA8eKGKiLRYk20cnRlnIDvdQ/exec');\n    \n    if (response.ok) {\n      const data = await response.json();\n      console.log(`Response FE : ${JSON.stringify(data)}`);\n      console.log(`We are Here`);\n      setSubmittedData(data.map(([firstName, secondName]) => ({ firstName, secondName })));\n    }\n  };\n\n  const handleEditClick = async (index) => {\n    const newData = prompt('Enter new first name and second name separated by a comma'); // replace this with your own edit UI\n    const [newFirstName, newSecondName] = newData.split(',');\n\n    // Update the local state\n    setSubmittedData(prevData => {\n      const newData = [...prevData];\n      newData[index] = { firstName: newFirstName, secondName: newSecondName };\n      return newData;\n    });\n\n    // Send a PUT request to the backend\n    const response = await fetch('/api/rows/' + index, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ firstName: newFirstName, secondName: newSecondName }),\n    });\n\n    if (!response.ok) {\n      console.error('Error updating data');\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {submittedData.map((data, index) => (\n        <div key={index}>\n          <span>{data.firstName} {data.secondName}</span>\n          <button onClick={() => handleEditClick(index)}>Edit</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}